设计原则
    准则：
        1、小即是美
        2、让每个程序只做好一件事
        3、快速建立原型
        4、舍弃高效率而取可移植性
        5、采用纯文本来存储数据
        6、软件复用
        7、使用shell脚本来提高杠杆效应和可移植性
        8、避免强制性的用户界面
        9、让每个程序都成为过滤器
    小准则
        允许用户定制环境
        尽量使操作系统内核小而轻量化
        使用小写字母并尽量简短
        沉默是金
        各部分之和大于整体
        寻求90%的解决方案
    五大设计原则 SOLID
        S 单一职责原则
            一个程序只做好一件事，复杂就拆分开，保持每个部分独立
            例子：每个then逻辑只做好一件事
        O 开放封闭原则
            对扩展开放，对修改封闭；增加需求时，扩展新代码，而不是修改已有代码；
            例子：扩展then
        L 李氏置换原则
            子类能覆盖父类，父类能出现的地方子类就能出现
        I 接口独立原则
            保持接口单一独立，避免出现“胖接口”
        D 依赖倒置原则 
            依赖于抽象、接口  而不是具体的实现
    从设计到模式
        设计原则   
        模板  
    23中设计模式 
        创建型
            工厂模式
            单例模式
            原型模式
        组合型
            适配器模式*
            装饰器
            代理
            外观
            桥接
            组合
            享元
        行为型
            策略
            模板方法
            观察者*
            迭代器*
            职责链
            命令
            备忘录
            状态*
            访问者
            中介者
            解释器

